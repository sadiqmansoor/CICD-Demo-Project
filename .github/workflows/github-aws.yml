name: Build and Deploy .NET Console App to AWS Windows EC2

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build .NET Console App
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build project
      run: dotnet build CICD-Demo.csproj --configuration Release

    - name: Publish for Windows
      run: dotnet publish CICD-Demo.csproj -c Release -r win-x64 --self-contained true -o ./publish

    - name: Upload published artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-publish
        path: ./publish

  deploy:
    name: Deploy to AWS Windows EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download published artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-publish
        path: ./publish

    - name: Copy files to Windows EC2
      uses: appleboy/scp-action@v0.1.6
      with:
        host: ${{ secrets.AWS_WINDOWS_SERVER_IP }}
        username: ${{ secrets.AWS_SERVER_USERNAME }}
        key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        port: 22
        source: "./publish/*"
        target: "C:/AppDeploy/ConsoleApp/"

    - name: Run app on Windows EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ vars.AWS_WINDOWS_SERVER_IP }}
        username: ${{ vars.AWS_SERVER_USERNAME }}
        key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        port: 22
        script: |
          powershell.exe -Command "
            cd 'C:\AppDeploy\ConsoleApp';
            Write-Host 'Stopping any existing instance...';
            Stop-Process -Name 'CICD-Demo' -ErrorAction SilentlyContinue;
            Write-Host 'Starting new instance...';
            Start-Process -FilePath '.\CICD-Demo.exe';
          "
